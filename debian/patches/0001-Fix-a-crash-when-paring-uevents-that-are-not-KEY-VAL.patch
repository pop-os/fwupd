From c2a1532e21ad563fa343c4c09d912c4b96e4abc4 Mon Sep 17 00:00:00 2001
From: Richard Hughes <richard@hughsie.com>
Date: Thu, 17 Apr 2025 15:57:06 +0100
Subject: [PATCH] Fix a crash when paring uevents that are not KEY=VALUE

Fixes https://github.com/fwupd/fwupd/issues/8707
---
 libfwupdplugin/fu-self-test.c    | 16 ++++++++++++++++
 libfwupdplugin/fu-udev-device.c  | 11 +++++++----
 libfwupdplugin/tests/meson.build |  1 +
 libfwupdplugin/tests/uevent      |  3 +++
 4 files changed, 27 insertions(+), 4 deletions(-)
 create mode 100644 libfwupdplugin/tests/uevent

diff --git a/libfwupdplugin/fu-self-test.c b/libfwupdplugin/fu-self-test.c
index 5fba24d9f..0876a8843 100644
--- a/libfwupdplugin/fu-self-test.c
+++ b/libfwupdplugin/fu-self-test.c
@@ -38,6 +38,7 @@
 #include "fu-self-test-struct.h"
 #include "fu-smbios-private.h"
 #include "fu-test-device.h"
+#include "fu-udev-device-private.h"
 #include "fu-volume-private.h"
 
 static GMainLoop *_test_loop = NULL;
@@ -6362,6 +6363,20 @@ fu_plugin_efi_signature_list_func(void)
 	g_assert_cmpint(fu_firmware_get_version_raw(FU_FIRMWARE(sig)), ==, 2024);
 }
 
+static void
+fu_device_udev_func(void)
+{
+	g_autofree gchar *prop = NULL;
+	g_autofree gchar *sysfs_path = g_test_build_filename(G_TEST_DIST, "tests", NULL);
+	g_autoptr(FuContext) ctx = fu_context_new();
+	g_autoptr(FuUdevDevice) udev_device = fu_udev_device_new(ctx, sysfs_path);
+	g_autoptr(GError) error = NULL;
+
+	prop = fu_udev_device_read_property(udev_device, "MODALIAS", &error);
+	g_assert_no_error(error);
+	g_assert_cmpstr(prop, ==, "hdaudio:v10EC0298r00100103a01");
+}
+
 static void
 fu_cab_checksum_func(void)
 {
@@ -6984,6 +6999,7 @@ main(int argc, char **argv)
 	g_test_add_func("/fwupd/archive{invalid}", fu_archive_invalid_func);
 	g_test_add_func("/fwupd/archive{cab}", fu_archive_cab_func);
 	g_test_add_func("/fwupd/device", fu_device_func);
+	g_test_add_func("/fwupd/device{udev}", fu_device_udev_func);
 	g_test_add_func("/fwupd/device{event}", fu_device_event_func);
 	g_test_add_func("/fwupd/device{event-uncompressed}", fu_device_event_uncompressed_func);
 	g_test_add_func("/fwupd/device{event-donor}", fu_device_event_donor_func);
diff --git a/libfwupdplugin/fu-udev-device.c b/libfwupdplugin/fu-udev-device.c
index 67d07a712..96b7d079e 100644
--- a/libfwupdplugin/fu-udev-device.c
+++ b/libfwupdplugin/fu-udev-device.c
@@ -2131,10 +2131,13 @@ fu_udev_device_read_property(FuUdevDevice *self, const gchar *key, GError **erro
 			return NULL;
 		uevent_lines = g_strsplit(str, "\n", -1);
 		for (guint i = 0; uevent_lines[i] != NULL; i++) {
-			g_autofree gchar **kvs = g_strsplit(uevent_lines[i], "=", 2);
-			g_hash_table_insert(priv->properties,
-					    g_steal_pointer(&kvs[0]),
-					    g_steal_pointer(&kvs[1]));
+			/* only split KEY=VALUE */
+			if (g_strstr_len(uevent_lines[i], -1, "=") != NULL) {
+				g_autofree gchar **kvs = g_strsplit(uevent_lines[i], "=", 2);
+				g_hash_table_insert(priv->properties,
+						    g_steal_pointer(&kvs[0]),
+						    g_steal_pointer(&kvs[1]));
+			}
 		}
 		priv->properties_valid = TRUE;
 	}
diff --git a/libfwupdplugin/tests/meson.build b/libfwupdplugin/tests/meson.build
index d8106e891..3c00c12c0 100644
--- a/libfwupdplugin/tests/meson.build
+++ b/libfwupdplugin/tests/meson.build
@@ -76,6 +76,7 @@ install_data([
     'pci.ids',
     'pnp.ids',
     'usb.ids',
+    'uevent',
   ],
   install_dir: join_paths(installed_test_datadir, 'tests')
 )
diff --git a/libfwupdplugin/tests/uevent b/libfwupdplugin/tests/uevent
new file mode 100644
index 000000000..6fe095b19
--- /dev/null
+++ b/libfwupdplugin/tests/uevent
@@ -0,0 +1,3 @@
+DRIVER=snd_hda_codec_realtek
+MODALIAS=hdaudio:v10EC0298r00100103a01
+
-- 
2.43.0

