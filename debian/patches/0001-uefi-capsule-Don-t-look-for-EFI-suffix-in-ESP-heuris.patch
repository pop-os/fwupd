From 9074688685c50b55ad65a588116db302fd81a868 Mon Sep 17 00:00:00 2001
From: Mario Limonciello <superm1@gmail.com>
Date: Fri, 22 Mar 2024 08:26:17 -0500
Subject: [PATCH 1/3] uefi-capsule: Don't look for EFI suffix in ESP heuristic

Not everyone uses a suffix in their filename.  Instead use only filename
prefix and extension for suffix.

(cherry picked from commit 2da117d5f4a0bae183fa39de7f56998f88fb9824)
---
 plugins/uefi-capsule/fu-uefi-capsule-plugin.c | 30 ++++++++-----------
 1 file changed, 13 insertions(+), 17 deletions(-)

diff --git a/plugins/uefi-capsule/fu-uefi-capsule-plugin.c b/plugins/uefi-capsule/fu-uefi-capsule-plugin.c
index 67e514955..1a107b2ff 100644
--- a/plugins/uefi-capsule/fu-uefi-capsule-plugin.c
+++ b/plugins/uefi-capsule/fu-uefi-capsule-plugin.c
@@ -540,20 +540,11 @@ fu_uefi_capsule_plugin_load_config(FuPlugin *plugin, FuDevice *device)
 static gboolean
 fu_uefi_capsule_plugin_is_esp_linux(FuVolume *esp, GError **error)
 {
-	const gchar *basenames_root[] = {"grub", "shim", "systemd-boot", NULL};
-	const gchar *efi_suffix;
-	g_autofree gchar *basenames_str = NULL;
+	const gchar *prefixes[] = {"grub", "shim", "systemd-boot", NULL};
+	g_autofree gchar *prefixes_str = NULL;
 	g_autofree gchar *mount_point = fu_volume_get_mount_point(esp);
-	g_auto(GStrv) basenames = g_new0(gchar *, G_N_ELEMENTS(basenames_root));
 	g_autoptr(GPtrArray) files = NULL;
 
-	/* build a list of possible files, e.g. grubx64.efi, shimaa64.efi, etc. */
-	efi_suffix = fu_uefi_bootmgr_get_suffix(error);
-	if (efi_suffix == NULL)
-		return FALSE;
-	for (guint i = 0; basenames_root[i] != NULL; i++)
-		basenames[i] = g_strdup_printf("%s%s.efi", basenames_root[i], efi_suffix);
-
 	/* look for any likely basenames */
 	if (mount_point == NULL) {
 		g_set_error_literal(error,
@@ -569,19 +560,24 @@ fu_uefi_capsule_plugin_is_esp_linux(FuVolume *esp, GError **error)
 		const gchar *fn = g_ptr_array_index(files, i);
 		g_autofree gchar *basename = g_path_get_basename(fn);
 		g_autofree gchar *basename_lower = g_utf8_strdown(basename, -1);
-		if (g_strv_contains((const gchar *const *)basenames, basename_lower)) {
+
+		for (guint j = 0; prefixes[j] != NULL; j++) {
+			if (!g_str_has_prefix(basename_lower, prefixes[j]))
+				continue;
+			if (!g_str_has_suffix(basename_lower, ".efi"))
+				continue;
 			g_info("found %s which indicates a Linux ESP, using %s", fn, mount_point);
 			return TRUE;
 		}
 	}
 
 	/* failed */
-	basenames_str = g_strjoinv("|", (gchar **)basenames);
+	prefixes_str = g_strjoinv("|", (gchar **)prefixes);
 	g_set_error(error,
-		    G_IO_ERROR,
-		    G_IO_ERROR_NOT_FOUND,
-		    "did not find %s in %s",
-		    basenames_str,
+		    FWUPD_ERROR,
+		    FWUPD_ERROR_NOT_FOUND,
+		    "did not any files with prefix %s in %s",
+		    prefixes_str,
 		    mount_point);
 	return FALSE;
 }
-- 
2.34.1

